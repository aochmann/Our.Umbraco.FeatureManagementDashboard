name: (Umbraco) Our.Umbraco Package Generation

on:
  workflow_run:
    workflows: [ "Build" ]
    types:
      - completed

jobs:
  our_umbraco:
    name: Our.Umbraco Package Generation
    if: ${{ github.event.workflow_run.conclusion == 'success' && github.event.workflow_run.event != 'pull_request' }}
    runs-on: windows-2022
    env:
      # Stop wasting time caching packages
      DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true

      # Disable sending usage data to Microsoft
      DOTNET_CLI_TELEMETRY_OPTOUT: true

      # Solution Setup
      CONFIG: 'Release'
      PROJECT_NAME: ${{ github.event.repository.name }}
      VERSION: '1.0.0'

      # Release Setup
      NUGET_VERSION: 'latest'
      BINARIES_OUTPUT: '.binaries_output'
      UMBRACO_PACKAGE: 'our.package.yml'
      UMBRACO_OUTPUT: '${{ github.workspace }}\.output\umbraco'
      UMBRACO_OUTPUT_EXTRACTED: '${{ github.workspace }}\.output\umbraco\extracted'
      UMBRACO_TOKEN: ${{ secrets.UMBRACO_TOKEN }}

    steps:
      - name: Checkout master
        uses: actions/checkout@v2
        with:
          ref: master
          fetch-depth: 0

      - name: Get version
        shell: bash
        run: |
          tag_check=$(git describe --exact-match `git rev-parse HEAD` | head -1)
          echo "VERSION=$tag_check" >> $GITHUB_ENV

      - name: Download a single artifact
        uses: aochmann/actions-download-artifact@1.0.2
        with:
          name: build_${{ env.PROJECT_NAME }}.${{ env.VERSION }}
          path: ${{ env.BINARIES_OUTPUT }}

      - name: Setup .NET 3.1.x
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '3.1.x'

      - name: Install tools
        run: dotnet tool restore

      - name: Build Our Package
        shell: powershell
        run: |
          $currentDirectory=$PWD

          $packages = Get-ChildItem -Path ${{ env.BINARIES_OUTPUT }} -Recurse -Include ${{ env.UMBRACO_PACKAGE }}

          foreach ($package in $packages){
            cd "$($package.Directory.FullName)"

            dotnet umbpack pack $package `
             -v ${{ env.VERSION }} `
             -n ${{ env.PROJECT_NAME }}.${{ env.VERSION }}.zip `
             -o ${{ env.UMBRACO_OUTPUT }}\

             cd $currentDirectory
          }

      - name: Extract Zip
        shell: powershell
        run: |
          $umbracoOurPath="${{ env.UMBRACO_OUTPUT }}\${{ env.PROJECT_NAME }}.${{ env.VERSION }}.zip"
          Expand-Archive -Path $umbracoOurPath -DestinationPath ${{ env.UMBRACO_OUTPUT_EXTRACTED }}

      - name: Upload Our.Umbraco package Artifact
        uses: actions/upload-artifact@v2
        with:
          name: ${{ env.PROJECT_NAME }}.${{ env.VERSION }}
          path: ${{ env.UMBRACO_OUTPUT_EXTRACTED }}

      - name: Publish to Our.Umbraco
        if: env.UMBRACO_TOKEN != null
        working-directory: ${{ env.UMBRACO_OUTPUT }}
        run: |
          dotnet umbpack push ${{ env.PROJECT_NAME }}.${{ env.VERSION }}.zip -w v901 --DotNetVersion=5.0.9 -k ${{ env.UMBRACO_TOKEN }}
        continue-on-error: true



